html {
    box-sizing: border-box;
    font-size: 62.5%;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

body {
    font-family: 'Raleway', sans-serif;
    font-size: 1.6rem;
}

img {
    max-width: 100%;
}

h1 {
    font-size: 4rem;
}

.contenedor {
    max-width: 1200px;
    width: 95%;
    margin: 0 auto;
}

.entrada-blog a {
    display: inline-block;
    background-color: #2196F3;
    color: white;
    padding: 10px 20px;
    text-decoration: none;
    font-weight: bold;
    text-transform: uppercase;
}

/** CODIGO AQUI **/
@media (min-width: 768px) {
    .dos-columnas {
        display: flex; /* Activa todos los elementos de flex box */
        justify-content: space-between; /* Posiciona un elemento a la izquierda, otro a la derecha y el centro libre. */
        gap: 2rem; /* Ahora existe gap que con menos código hace exactamente lo mismo pero no tiene un soporte del 100% en navegadores. La opción de abajo, flex, si tiene soporte del 100% en navegadores por tener mas tiempo implementada. */
    }

    .entrada-blog {
        /* flex-basis: calc(50% - 1rem); */ /* Que ocupe el 50% del ancho de la página y como se requiere separación se le resta 1rem. Esto requiere en el contenedor donde esta definido el display: flex definir tambien un justiy-content: space-between para que quede un elemento a la izquierda, otro a la derecha y el centro libre. */
        flex: 0 0 calc(50% - 1rem); /* Forma antigua. Se puede indicar de la siguiente forma, sin embargo, flex: toma tres valores:display: 
                                       1- Factor de crecimiento 0. 
                                       2- Valor, factor 0
                                       3- Tamańo base. */
    }
}